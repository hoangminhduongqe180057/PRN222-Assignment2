@page
@model HoangMinhDuongRazorPages.Pages.Admin.ReportModel
@using System.Text.Json

@{
    ViewData["Title"] = "Report";
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Set random start and end dates
            const startDateInput = document.querySelector('input[name="StartDate"]');
            const endDateInput = document.querySelector('input[name="EndDate"]');
            
            if (startDateInput && endDateInput) {
                const today = new Date();
                const randomStart = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate());
                const randomEnd = new Date(today);
                startDateInput.value = randomStart.toISOString().split('T')[0];
                endDateInput.value = randomEnd.toISOString().split('T')[0];
            }

            // Bar chart for news by status
            const statusCtx = document.getElementById('statusChart').getContext('2d');
            new Chart(statusCtx, {
                type: 'bar',
                data: {
                    labels: ['Active', 'Inactive'],
                    datasets: [{
                        label: 'Number of News',
                        data: [@Model.ActiveNewsCount, @Model.InactiveNewsCount],
                        backgroundColor: ['#4CAF50', '#F44336'],
                        borderColor: ['#4CAF50', '#F44336'],
                        borderWidth: 1,
                        borderRadius: 8,
                        barThickness: 40
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: { display: true, text: 'Count', font: { size: 14, weight: '600' } },
                            ticks: { stepSize: 1, font: { size: 12 } }
                        },
                        x: {
                            title: { display: true, text: 'Status', font: { size: 14, weight: '600' } },
                            ticks: { font: { size: 12 } }
                        }
                    },
                    plugins: {
                        legend: { position: 'top', labels: { font: { size: 12, weight: '500' } } },
                        title: { display: true, text: 'News by Status', font: { size: 16, weight: '600' } }
                    },
                    animation: { duration: 1000, easing: 'easeOutQuart' }
                }
            });

            // Bar chart for news by category
            const categoryCtx = document.getElementById('categoryChart').getContext('2d');
            const categoryLabels = @Html.Raw(JsonSerializer.Serialize(Model.CategoryLabels));
            const categoryData = @Html.Raw(JsonSerializer.Serialize(Model.CategoryData));
            new Chart(categoryCtx, {
                type: 'bar',
                data: {
                    labels: categoryLabels,
                    datasets: [{
                        label: 'Number of News',
                        data: categoryData,
                        backgroundColor: '#2196F3',
                        borderColor: '#2196F3',
                        borderWidth: 1,
                        borderRadius: 8,
                        barThickness: 30
                    }]
                },
                options: {
                    indexAxis: 'y',
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            beginAtZero: true,
                            title: { display: true, text: 'Count', font: { size: 14, weight: '600' } },
                            ticks: { stepSize: 1, font: { size: 12 } }
                        },
                        y: {
                            title: { display: true, text: 'Category', font: { size: 14, weight: '600' } },
                            ticks: { font: { size: 12 } }
                        }
                    },
                    plugins: {
                        legend: { display: false },
                        title: { display: true, text: 'News by Category', font: { size: 16, weight: '600' } }
                    },
                    animation: { duration: 1000, easing: 'easeOutQuart' }
                }
            });
        });
    </script>
}

<style>
    .report-card {
        border-radius: 12px;
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
        background: #ffffff;
        transition: transform 0.3s ease;
    }

    .report-card:hover {
        transform: translateY(-5px);
    }

    .card-header {
        background: linear-gradient(90deg, #1e3c72, #2a5298);
        border-radius: 12px 12px 0 0;
        padding: 20px;
    }

    .card-title {
        font-weight: 700;
        color: #ffffff;
        font-size: 1.8rem;
        margin: 0;
    }

    .card-body {
        padding: 30px;
    }

    .form-label {
        font-weight: 500;
        color: #1e3c72;
        margin-bottom: 8px;
    }

    .form-control {
        border-radius: 8px;
        border: 1px solid #ced4da;
        padding: 10px;
        font-size: 0.95rem;
        transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }

    .form-control:focus {
        border-color: #2a5298;
        box-shadow: 0 0 8px rgba(42, 82, 152, 0.2);
        outline: none;
    }

    .btn-primary {
        background: linear-gradient(90deg, #1e3c72, #2a5298);
        border: none;
        border-radius: 8px;
        padding: 10px;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        background: linear-gradient(90deg, #2a5298, #1e3c72);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    .table-modern {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        font-size: 0.95rem;
    }

    .table-modern thead {
        background: linear-gradient(90deg, #1e3c72, #2a5298);
        color: #fff;
    }

    .table-modern th, .table-modern td {
        padding: 14px 20px;
        border-bottom: 1px solid #e9ecef;
        text-align: left;
    }

    .table-modern th {
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .table-modern tbody tr {
        transition: background-color 0.3s ease;
    }

    .table-modern tbody tr:hover {
        background-color: rgba(30, 60, 114, 0.05);
    }

    .chart-container {
        position: relative;
        height: 300px;
        margin-bottom: 20px;
    }

    .alert-warning {
        border-radius: 8px;
        padding: 15px;
        font-size: 0.95rem;
    }

    @@media (max-width: 768px) {
        .card-body {
            padding: 20px;
        }

        .card-title {
            font-size: 1.5rem;
        }

        .form-control, .btn-primary {
            font-size: 0.9rem;
            padding: 8px;
        }

        .table-modern th, .table-modern td {
            padding: 10px;
            font-size: 0.9rem;
        }

        .chart-container {
            height: 250px;
        }
    }
</style>

<div class="container mt-0">
    <div class="report-card">
        <div class="card-header">
            <h2 class="card-title">Generate Report</h2>
        </div>
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-4">
                    <label class="form-label">Start Date</label>
                    <input type="date" name="StartDate" class="form-control" value="@Model.StartDate?.ToString("yyyy-MM-dd")" />
                </div>
                <div class="col-md-4">
                    <label class="form-label">End Date</label>
                    <input type="date" name="EndDate" class="form-control" value="@Model.EndDate?.ToString("yyyy-MM-dd")" />
                </div>
                <div class="col-md-4 align-self-end">
                    <button type="submit" class="btn btn-primary w-100">Generate Report</button>
                </div>
            </form>

            @if (Model.Articles != null && Model.Articles.Any())
            {
                <div class="mt-4">
                    <h3 class="card-title">Report Overview</h3>
                    <div class="row g-4">
                        <div class="col-md-6">
                            <div class="card h-100">
                                <div class="card-body">
                                    <div class="chart-container">
                                        <canvas id="statusChart"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card h-100">
                                <div class="card-body">
                                    <div class="chart-container">
                                        <canvas id="categoryChart"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <h3 class="mt-4 card-title">News List</h3>
                <div class="table-responsive">
                    <table class="table-modern">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Created Date</th>
                                <th>Category</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var article in Model.Articles)
                            {
                                <tr class="align-middle">
                                    <td>@article.NewsArticle.Title</td>
                                    <td>@article.NewsArticle.CreatedDate.ToString("dd/MM/yyyy")</td>
                                    <td>@article.NewsArticle.CategoryName</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-warning mt-4" role="alert">
                    No news found for the selected date range.
                </div>
            }
        </div>
    </div>
</div>